{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from \"flatpickr\";\nimport \"flatpickr/dist/flatpickr.min.css\";\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\nconst startBtn = document.querySelector('[data-start]');\nconst dateTimePicker = document.querySelector('#datetime-picker');\nconst daysField = document.querySelector('[data-days]');\nconst hoursField = document.querySelector('[data-hours]');\nconst minutesField = document.querySelector('[data-minutes]');\nconst secondsField = document.querySelector('[data-seconds]');\n\nlet timerId = null;\nlet userSelectedDate = null;\n\nstartBtn.disabled = true;  \n\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\n\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, '0');\n}\n\n\nflatpickr(dateTimePicker, {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    userSelectedDate = selectedDates[0];\n\n    if (userSelectedDate <= new Date()) {\n      iziToast.error({\n        title: 'Error',\n        message: 'Please choose a date in the future',\n        position: 'topRight',\n      });\n      startBtn.disabled = true;\n    } else {\n      startBtn.disabled = false;\n    }\n  },\n});\n\n\nstartBtn.addEventListener('click', () => {\n  startBtn.disabled = true;\n  dateTimePicker.disabled = true;\n\n  timerId = setInterval(() => {\n    const currentTime = new Date();\n    const timeDifference = userSelectedDate - currentTime;\n\n    if (timeDifference <= 0) {\n      clearInterval(timerId);\n      dateTimePicker.disabled = false;\n      iziToast.success({\n        title: 'Success',\n        message: 'Countdown completed!',\n        position: 'topRight',\n      });\n      return;\n    }\n\n    const { days, hours, minutes, seconds } = convertMs(timeDifference);\n    daysField.textContent = addLeadingZero(days);\n    hoursField.textContent = addLeadingZero(hours);\n    minutesField.textContent = addLeadingZero(minutes);\n    secondsField.textContent = addLeadingZero(seconds);\n  }, 1000);\n});"],"names":["startBtn","dateTimePicker","daysField","hoursField","minutesField","secondsField","timerId","userSelectedDate","convertMs","ms","days","hours","minutes","seconds","addLeadingZero","value","flatpickr","selectedDates","iziToast","timeDifference"],"mappings":"+IAKA,MAAMA,EAAW,SAAS,cAAc,cAAc,EAChDC,EAAiB,SAAS,cAAc,kBAAkB,EAC1DC,EAAY,SAAS,cAAc,aAAa,EAChDC,EAAa,SAAS,cAAc,cAAc,EAClDC,EAAe,SAAS,cAAc,gBAAgB,EACtDC,EAAe,SAAS,cAAc,gBAAgB,EAE5D,IAAIC,EAAU,KACVC,EAAmB,KAEvBP,EAAS,SAAW,GAGpB,SAASQ,EAAUC,EAAI,CAMrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAC1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EACpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EACjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAGA,SAASC,EAAeC,EAAO,CAC7B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACtC,CAGAC,EAAUf,EAAgB,CACxB,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQgB,EAAe,CACrBV,EAAmBU,EAAc,CAAC,EAE9BV,GAAoB,IAAI,MAC1BW,EAAS,MAAM,CACb,MAAO,QACP,QAAS,qCACT,SAAU,UAClB,CAAO,EACDlB,EAAS,SAAW,IAEpBA,EAAS,SAAW,EAEvB,CACH,CAAC,EAGDA,EAAS,iBAAiB,QAAS,IAAM,CACvCA,EAAS,SAAW,GACpBC,EAAe,SAAW,GAE1BK,EAAU,YAAY,IAAM,CAE1B,MAAMa,EAAiBZ,EADH,IAAI,KAGxB,GAAIY,GAAkB,EAAG,CACvB,cAAcb,CAAO,EACrBL,EAAe,SAAW,GAC1BiB,EAAS,QAAQ,CACf,MAAO,UACP,QAAS,uBACT,SAAU,UAClB,CAAO,EACD,MACD,CAED,KAAM,CAAE,KAAAR,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYL,EAAUW,CAAc,EAClEjB,EAAU,YAAcY,EAAeJ,CAAI,EAC3CP,EAAW,YAAcW,EAAeH,CAAK,EAC7CP,EAAa,YAAcU,EAAeF,CAAO,EACjDP,EAAa,YAAcS,EAAeD,CAAO,CAClD,EAAE,GAAI,CACT,CAAC"}